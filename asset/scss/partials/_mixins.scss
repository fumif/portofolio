@mixin sect ($minh: 100vh, $pad: null ) {
    width: 100%;
    overflowX: hidden;
        min-height: $minh;
        padding-top: $pad;
        padding-bottom: $pad;
    @content;
}

@mixin font($size: $font-base, $family:$opensans, $weight: null) {
    font-size: $size;
    font-family: $family;
    font-weight: $weight;
}

@mixin btn ($bdrs :0, $margin: null) {
    border-radius: $bdrs;
    margin-top: $margin;
    margin-bottom: $margin;
    @content;
    &:hover {
        @include shadow(0, 1px, 3px);
    }
}

@mixin accent ($bgc:$colour-accent, $colour:$colour-base!important) {
    background-color: $bgc;
    color: $colour;
    @content;
}

@mixin shadow ($hoff:0, $voff:5px, $blur:12px, $colour: rgba($colour-text, .55)) {
    filter: drop-shadow( $hoff $voff $blur $colour );
}

@mixin flex($disp: flex, $dir: row, $wrap: wrap, $just: false) {
    display: $disp;
    flex-direction: $dir;
    flex-wrap: $wrap;
    justify-content: $just;
    @content;
}

@mixin title($font: 3rem!important) {
    @include font($weight: $light);
    font-size: $font;
    margin-bottom: rem(60px);
    @content;
}

@mixin position($position: absolute, $top: null, $left: null, $right: null, $bottom: null, $loc: null) {
    position: $position;
    @if (not $top and not $left and not $right and not $bottom) {
        top: $loc;
        left: $loc;
        right: $loc;
        bottom: $loc;
    } @else {
        top: $top;
        left: $left;
        right: $right;
        bottom: $bottom;
    }
}

@mixin angle($pseudo: null, $reverse: false, $angle: 2deg) {
    @if $pseudo=='before' or $pseudo=='after' or $pseudo=='both' {
        position: relative;
        z-index: 1;
        $selector: if($pseudo=='both', '&::before, &::after', '&:#{$pseudo}');

        #{$selector} {
            background: inherit;
            content: "";
            display: block;
            height: 50%;
            position: absolute;
            right: 0;
            left: 0;
            z-index: -1;
        }

        @if $pseudo=='before' {
            #{$selector} {
                top: 0;

                @if $reverse {
                    transform: skewY($angle * -1);
                    transform-origin: 0 0;
                }
                @else {
                    transform: skewY($angle);
                    transform-origin: 100% 0;
                }
            }
        }


        @if $pseudo=='after' {
            #{$selector} {
                bottom: 0;

                @if $reverse {
                    transform: skewY($angle);
                    transform-origin: 0 100%;
                }
                @else {
                    transform: skewY($angle * -1);
                    transform-origin: 100%;
                }
            }
        }


        @if $pseudo=='both' {
            &::before {
                top: 0;

                @if $reverse {
                    transform: skewY($angle * -1);
                    transform-origin: 0 0;
                }
                @else {
                    transform: skewY($angle);
                    transform-origin: 100% 0;
                }
            }

            &::after {
                bottom: 0;
                @if $reverse {
                    transform: skewY($angle);
                    transform-origin: 0 0;
                }
                @else {
                    transform: skewY($angle * -1);
                    transform-origin: 100%;
                }
            }
        }
    }
}

@mixin blur($pos: null, $sect: none) {
    position: relative;
    overflow: hidden;
    color: $colour-base;
    .bg-img {
        background: rgba($colour-text, .55) $pos no-repeat;
        z-index: -1;
        filter: blur(5px);
        background-blend-mode: multiply;
        @include position($loc: -5px);
    }

    @if ($sect=='ftr') {
        .bg-img {
            background-position: center;
        }
    } 
}

@mixin easing($in-out: false, $func: false) {

        @if $func == 'sine' { // Sine
            @if $in-out=='both' {
                transition-timing-function: cubic-bezier(0.445, 0.05, 0.55, 0.95);
            } @else if $in-out=='in' {
                transition-timing-function: cubic-bezier(0.47, 0, 0.745, 0.715);
            } @else {
                transition-timing-function: cubic-bezier(0.39, 0.575, 0.565, 1);
            }
        }
        
        @if $func == 'quad' { // Quad
            @if $in-out=='both' {
                transition-timing-function: cubic-bezier(0.455, 0.03, 0.515, 0.955);
            } @else if $in-out=='in' {
                transition-timing-function: cubic-bezier(0.55, 0.085, 0.68, 0.53);
            } @else {
                transition-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94);
            }
        }
        
        @if $func == 'cubic' { // Cubic
            @if $in-out=='both' {
                transition-timing-function: cubic-bezier(0.645, 0.045, 0.355, 1);
            } @else if $in-out=='in' {
                transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
            } @else {
                transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
            }
        }
        
        @if $func == 'quart' { // Quart
            @if $in-out=='both' {
                transition-timing-function: cubic-bezier(0.77, 0, 0.175, 1);
            } @else if $in-out=='in' {
                transition-timing-function: cubic-bezier(0.895, 0.03, 0.685, 0.22);
            } @else {
                transition-timing-function:  cubic-bezier(0.165, 0.84, 0.44, 1);
            }
        }
        
        @if $func == 'quint' { // Quint
            @if $in-out=='both' {
                transition-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            } @else if $in-out=='in' {
                transition-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);
            } @else {
                transition-timing-function: cubic-bezier(0.23, 1, 0.32, 1);
            }
        }

        @if $func == 'expo' { // Expo
            @if $in-out=='both' {
                transition-timing-function: cubic-bezier(1, 0, 0, 1);
            } @else if $in-out=='in' {
                transition-timing-function: cubic-bezier(0.95, 0.05, 0.795, 0.035);
            } @else {
                transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1);
            }
        }

        @if $func == 'circ' { // Circ
            @if $in-out=='both' {
                transition-timing-function: cubic-bezier(0.785, 0.135, 0.15, 0.86);
            } @else if $in-out=='in' {
                transition-timing-function: cubic-bezier(0.6, 0.04, 0.98, 0.335);
            } @else {
                transition-timing-function: cubic-bezier(0.075, 0.82, 0.165, 1);
            }
        }

        @if $func == 'back' { // Back
            @if $in-out=='both' {
                transition-timing-function: cubic-bezier(0.68, -0.55, 0.265, 1.55);
            } @else if $in-out=='in' {
                transition-timing-function: cubic-bezier(0.6, -0.28, 0.735, 0.045);
            } @else {
                transition-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.275);
            }
        }
}